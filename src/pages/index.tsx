import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton,  useUser } from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";
import relativeTime from "dayjs/plugin/relativeTime"
import dayjs from "dayjs";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="profile name"
        className="rounded-full"
        width={56}
        height={56}
        
      />
      <input
        placeholder="Type sound emojis!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUSer = RouterOutputs["post"]["getAll"][number];

const PostsView = ({ post , author}: PostWithUSer) => {
  return (
    <div className="border-b border-slate-400 p-4 flex gap-3">
      <Image 
        src={author.profilePicture} 
        alt={author.id} 
        className="rounded-full"
        width={56}
        height={56}
        
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300 font-bold gap-1">
          <span>@{author.username}</span>  
          <span className="font-thin">{" "} {` ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>
          {post.content}
        </span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postLoading } = api.post.getAll.useQuery();

  if(postLoading) return <LoadingPage />

  if(!data)  return <div className="text-2xl text-red-700">Something gone wrong</div>;

  return(
    <div>
        {data?.map(({ post, author }) => <PostsView key={post.id} post={post} author={author}/>)}
    </div>
  )
}

const Home: NextPage = () => {
  const { isSignedIn, isLoaded : userLoaded} = useUser();
 
  api.post.getAll.useQuery();

  if (!userLoaded) return <div/>;


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen justify-center ">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4 ">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton mode="modal">
                  <button className="btn">Sign in</button>
                </SignInButton>
              </div>
            )}

            {isSignedIn && <CreatePostWizard />}

          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
